= Kullanici Giris Programı (thread-non-safe)

Bu programda singleton pattern kullanılarak bir kullanıcı giriş
uygulaması tasarlanmıştır.Tasarımı aşağıdaki gibidir.
<<bookmark-a,signleton>>


image::uml-1.png[]


[[bookmark-a]]
[source,java]
----
public class DBA {
    private static DBA instance;//<1>
      private DBA(){ //<2>
        try{
            Class.forName(driver).newInstance();
            conn=DriverManager.getConnection(DB_url,DB_user,DB_password);
            stmt=(Statement) conn.createStatement();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
     public static DBA getInstance(){//<3>
        synchronized (DBA.class){
            if(instance==null){//<4>
                instance=new DBA();//<5>
            }
        }
        return instance;
    }
----
<1> Singleton pattern olması için sınıf içerisinde private static kendi referansı bulunmalıdır.
<2> Singleton pattern olması için constructor private olmalıdır.
<3> Singleton patternde nesne örneği getInstance() methodunda olduğu gibi bir public method ile kendi referansını göndermelidir.
<4> Buradaki karar kontrol yapısında nesnenin bir tane örneğinin olması istenmektedir eğer instance referansına karşılık heap'te bir alan tutulmuşa geçilir.Eğer referansa karşılık bir bellek alanı tutulmamışsa bu alan nesne örneklenerek oluşturulur 
<5> Nesne örneği oluşturulur.
<6> Nesne geri döndürülür


